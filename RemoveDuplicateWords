/* TASK:
Description:
Your task is to remove all duplicate words from a string, leaving only single (first) words entries.

Example:

Input:

'alpha beta beta gamma gamma gamma delta alpha beta beta gamma gamma gamma delta'

Output:

'alpha beta gamma delta'
SOLUTION: */








function removeDuplicateWords (s) {
 return s.split(" ").filter((cur,ind,arr)=>ind==arr.indexOf(cur),0).join(" ")


}













/* TEST
const random = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;
const shuffleArray = a => a.sort(() => Math.random() - 0.5);
const randomLetter = () => [String.fromCharCode(random(97, 122)), String.fromCharCode(random(65, 90))][+(Math.random() - 0.5 > 0)];
const randomWord = () => Array.from(Array(random(1, 10)), x => randomLetter()).join``;
const randomWords = () => (randomWord() + ' ').repeat(random(1, 10)).trim();
const randomInput = () => shuffleArray(Array.from(Array(random(1, 20)), x => randomWords()).join` `.split` `).join` `
const _removeDuplicateWords = s => s.split` `.filter((e, i, a) => i === a.indexOf(e)).join` `;

Test.describe('Example tests', _ => {
  Test.it('should handle example case', _ => {
    Test.assertEquals(removeDuplicateWords('alpha beta beta gamma gamma gamma delta alpha beta beta gamma gamma gamma delta'), 'alpha beta gamma delta');
  });
});


Test.describe('Random tests', _ => {
  Test.it('should handle random cases', _ => {
    for (let i = 0; i < 99; i++) {
      const string = randomInput();
      Test.assertEquals(removeDuplicateWords(string), _removeDuplicateWords(string));
    }
  });
});
